# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

target-version = "py310"
line-length = 100

[lint]
preview = true
explicit-preview-rules = true
select = ["ALL"]
extend-select = ["W391", "E303"]
allowed-confusables = ["âˆ’"]

ignore = [
    "D203",
    "D213",
    "FIX",
    "TD",

# High priority fixes
    "N818", # Exception classes should end in Error
    "N806", # Variable names
    "LOG015", # Using root logger
    "B008", # function calls in default arg value
    "A001", # variable names mask builtins
    "PERF203", # Exception handling in loops

# Temporary ignores just for CI until the rules pass then they can be removed
# from here to prevent future regressions
    "ANN001",
    "ANN201",
    "ANN202",
    "ANN204",
    "ANN205",
    "ARG001",
    "ARG002",
    "ARG004",
    "B904",
    "BLE001",
    "C901",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D205",
    "D400",
    "D401",
    "D404",
    "D415",
    "DTZ003",
    "DTZ005",
    "DTZ006",
    "DTZ007",
    "E501",
    "ERA001",
    "FBT001",
    "FBT002",
    "FBT003",
    "FIX002",
    "FURB122",
    "G001",
    "G003",
    "G004",
    "ISC001",
    "N801",
    "PLC0414",
    "PLC0415",
    "PLR091",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "PLW0604",
    "PLW1641",
    "PLW2901",
    "PT009",
    "PT011",
    "PTH100",
    "PTH101",
    "PTH103",
    "PTH107",
    "PTH109",
    "PTH110",
    "PTH116",
    "PTH118",
    "PTH120",
    "PTH123",
    "PYI024",
    "RUF001",
    "RUF012",
    "S101",
    "S103",
    "S202",
    "S311",
    "S602",
    "S603",
    "S605",
    "S607",
    "SIM115",
    "SLF001",
    "SLOT002",
    "T201",
    "TD002",
    "TD003",
    "TD004",
    "TD005",
    "TRY004",
    "TRY300",
    "TRY301",
    "TRY401",
    "UP031",
]

[lint.per-file-ignores]
# Less strict in the tests
"tests/**.py" = [
    # Checks for boolean passed as positional argument which is useful in the
    # main codebase for clarity. However it's common to assert against a boolean
    # in tests and having to use kwargs in all cases will clutter the tests.
    "FBT003",
]
